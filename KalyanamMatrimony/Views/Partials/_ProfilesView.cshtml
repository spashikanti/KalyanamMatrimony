@model IEnumerable<KalyanamMatrimony.Models.Profile>

@{
    string dataTableName = (string)ViewData["DataTable"];

    bool isProfileLimitReached = ViewBag.isProfileLimitReached;
}

@if (isProfileLimitReached)
{
    <div class="text-danger">
        You cannot create a new Profile as you have reached the maximum limit.
    </div>
}
<div class="card shadow mb-4 border-primary">
    <div class="card-header bg-primary text-white">
        <div class="row">
            <div class="col-md-10">
                <h5 class="font-weight-bold text-white">View Profiles</h5>
            </div>
            <div class="col-md-2">
                @if (!isProfileLimitReached)
                {
                    <a class="btn btn-success" asp-controller="profile" asp-action="createprofile">
                        <strong>Create Profile</strong>
                    </a>
                }
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered border-dark" id="@dataTableName" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.ProfileId)</th>
                        <th>Full Name</th>
                        <th>@Html.DisplayNameFor(model => model.Gender)</th>
                        <th>Phone</th>
                        <th style="display:none">@Html.DisplayNameFor(model => model.CreatedDate)</th>
                        <th></th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.ProfileId)</th>
                        <th>Full Name</th>
                        <th>@Html.DisplayNameFor(model => model.Gender)</th>
                        <th>Phone</th>
                        <th style="display:none">@Html.DisplayNameFor(model => model.CreatedDate)</th>
                        <th></th>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProfileId)
                            </td>
                            @*<td>
                                    @Html.DisplayFor(modelItem => item.UserId)
                                </td>*@
                            <td>
                                @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Gender)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td style="display:none">
                                @Html.DisplayFor(modelItem => item.CreatedDate)
                            </td>
                            <td>
                                @Html.ActionLink("View", "ViewProfile", new { id = item.ProfileId }) |
                                @Html.ActionLink("Edit", "EditProfile", new { id = item.ProfileId })
                                @if (!User.IsInRole(Enum.GetName(typeof(CustomEnums.CustomRole), CustomEnums.CustomRole.AdminAssistant)))
                                {
                                    <span>|</span> @Html.ActionLink("Delete", "ViewProfile", new { id = item.ProfileId, userId = item.UserId })
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

